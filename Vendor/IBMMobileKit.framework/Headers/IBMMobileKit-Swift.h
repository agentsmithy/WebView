// Generated by Apple Swift version 4.0.2 (swiftlang-900.0.69.2 clang-900.0.38)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import AVFoundation;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("IBMMobileKit")

/// HMAC Algorithm (HOTP) challenge accepts a value that an algorithm has computed to produce a one-time password from a shared secret key.
SWIFT_CLASS("_TtC12IBMMobileKit13HotpChallenge")
@interface HotpChallenge : NSObject
/// Initializes a new <code>HotpChallenge</code> mechanism.
- (nonnull instancetype)init;
/// The description of the mechanism.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// A class of Generator used to generate the one-time password.
SWIFT_CLASS("_TtC12IBMMobileKit19OtpGeneratorContext")
@interface OtpGeneratorContext : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// A class of Generator used to generate a counter based one-time password (HOTP).
SWIFT_CLASS("_TtC12IBMMobileKit20HotpGeneratorContext")
@interface HotpGeneratorContext : OtpGeneratorContext
@end


/// The <code>KeychainHelper</code> class performs RSA export operations to DER and PEM formats that can be used outside iOS for data signing.
SWIFT_CLASS("_TtC12IBMMobileKit14KeychainHelper")
@interface KeychainHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Holds the result of the authentication request.
SWIFT_CLASS("_TtC12IBMMobileKit11OAuthResult")
@interface OAuthResult : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSCoder;

/// The <code>OAuthToken</code> is a object that stores the access token and optional refresh token for requests to protected resources.
SWIFT_CLASS("_TtC12IBMMobileKit10OAuthToken")
@interface OAuthToken : NSObject <NSCoding>
/// Returns an object initialized from data in a given unarchiver.
/// \param decoder An unarchiver object.
///
///
/// returns:
/// <code>self</code>, initialized using the data in decoder.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder;
/// Encodes the receiver using a given archiver.
/// \param coder An archiver object.
///
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end



/// Time-based One-time Password Algorithm (TOTP) challenge accepts a value that an algorithm has computed to produce a one-time password from a shared secret key and the current time.
SWIFT_CLASS("_TtC12IBMMobileKit13TotpChallenge")
@interface TotpChallenge : NSObject
/// Initializes a new <code>TotpChallenge</code> mechanism.
- (nonnull instancetype)init;
/// The description of the mechanism.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// A class of Generator used to generate a time based one-time password (TOTP).
SWIFT_CLASS("_TtC12IBMMobileKit20TotpGeneratorContext")
@interface TotpGeneratorContext : OtpGeneratorContext
@end

@class UIColor;
@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

/// The UIRegistrationQRView enables mobile application to scan a QR code for device registration.
SWIFT_CLASS("_TtC12IBMMobileKit12UIQRScanView")
@interface UIQRScanView : UIView <AVCaptureMetadataOutputObjectsDelegate>
/// An initialized view object.
/// \param frame The frame rectangle for the view, measured in points. The origin of the frame is relative to the superview in which you plan to add it.
///
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
/// Returns an object initialized from data in a given unarchiver.
/// \param aDecoder An unarchiver object.
///
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Draws the receiver’s image within the passed-in rectangle.
/// \param rect The portion of the view’s bounds that needs to be updated.
///
- (void)drawRect:(CGRect)rect;
/// The outline color when the QR scan is not matached.
/// remark:
/// Default value is <code>UIColor(red:1.00, green:0.31, blue:0.31, alpha:0.75)</code>
@property (nonatomic, strong) UIColor * _Nonnull scanNoMatchColor;
/// The outline color when the QR scan is matached.
/// remark:
/// Default value is <code>UIColor(red:0.25, green:0.47, blue:0.75, alpha:0.75)</code>
@property (nonatomic, strong) UIColor * _Nonnull scanMatchColor;
/// The width of the QR scan border.
/// remark:
/// Default value is 3.0.
@property (nonatomic) CGFloat scanOutlineWidth;
/// Tells the view that a subview is about to be removed.
/// \param subview The subview that will be removed.
///
- (void)willRemoveSubview:(UIView * _Nonnull)subview;
/// Informs the delegate that the capture output object emitted new metadata objects.  The <code>AVCaptureMetadataOutput</code> object emits only metadata objects whose types are included in its metadataObjectTypes property.
/// remark:
/// The <code>AVMetadataObject</code> is set to an instance generated from QR codes.
/// \param captureOutput The <code>AVCaptureMetadataOutput</code> object that captured and emitted the metadata objects.
///
/// \param metadataObjects An array of <code>AVMetadataObject</code> instances representing the newly emitted metadata.
///
/// \param connection The capture connection through which the objects were emitted.
///
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


/// The simple user presence challenge prompts the user to acknowledge.
SWIFT_CLASS("_TtC12IBMMobileKit21UserPresenceChallenge")
@interface UserPresenceChallenge : NSObject
/// Initializes a new <code>UserPresenceChallenge</code> mechanism.
- (nonnull instancetype)init;
/// The description of the mechanism.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// The Username Password challenge prompts the user to re-enter their username and password registered with Access Manager.
SWIFT_CLASS("_TtC12IBMMobileKit25UsernamePasswordChallenge")
@interface UsernamePasswordChallenge : NSObject
/// Initializes a new <code>UsernamePasswordChallenge</code> mechanism.
- (nonnull instancetype)init;
/// The description of the mechanism.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class AVAudioRecorder;

/// The voice biometric challenge prompts the user to verify a phrase.  The challenge will record for 10 seconds unless stop is explicily invoked.
/// warning:
/// Tech-preview not to be used in your code.
SWIFT_CLASS("_TtC12IBMMobileKit14VoiceChallenge")
@interface VoiceChallenge : NSObject <AVAudioRecorderDelegate>
/// Initializes a new <code>VoiceChallenge</code> mechanism.
- (nonnull instancetype)init;
/// The description of the mechanism.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Callback to handle the completed recording session.
- (void)audioRecorderDidFinishRecording:(AVAudioRecorder * _Nonnull)recorder successfully:(BOOL)flag;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
